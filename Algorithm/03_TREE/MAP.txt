
1. 맵 MAP 
-> c++ 은 내부적으로 Red-blank Tree 사용 

Red-black Tree 란? 
자가 균형 이진 탐색 나무 로써, 대표적으로는 연관 배열 등을 구현하는데 쓰이는 자료 구조이다. 

- Red-Black 트리는 스스로 균형을 잡는 트리이면서, AVL 트리보다 덜 균형하다. 재배치 확률이 적다. 
삽입이나 삭제 연산이 많을 경우 사용하면 좋음! 


다섯가지 규칙 
- 모든 노드는 빨강과 검정 색만 존재한다. (색깔이 없을 수  x )
- 루트 노드는 항상 검정이다  (일시적으로 빨강 노드가 될 수 있으나, 최종적으로 항상 검정 노드이다,. )
- 모든 Leaf 노드는 루트 노드롸 동일한 색깔을 가지고 있어야 한다. (Leaf 노드는 논리적인 NULL 노드이며, 항상 검정색이다. )
- 모든 빨강 노드의 자식은 검정 노드이다 ( 해당 규칙으로 인해 재배치가 생김.) (검정노드의 자식이 검정 노드일 수 있다.)
- 특정 노드에서 후손 노드로 가는 경로는 동일한 수의 검정색 노드가 존재한다. 


map<string,int> m;
m["Yoondy"] = 40;
m["Sky"] = 100;
m["Jerry"] = 50;

unordered_map 과 map 의 차이. 
- 간단하게 설명 : unordered map 은 말그대로, 요소를 특정 순서로 유지하지 않는다. 즉, 키- 값 쌍은 삽입된 순서나 특정 순서 없이 저장됨. 


